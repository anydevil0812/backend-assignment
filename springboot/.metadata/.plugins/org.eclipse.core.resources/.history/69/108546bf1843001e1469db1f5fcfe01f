plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.16-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    
	compileOnly 'org.projectlombok:lombok'
	
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks {
	bootJar {
		archiveFileName.set("app.jar")
	}
}

task copyDeps(type: Copy) {
	from(sourceSets.main.runtimeClasspath) // sourceSets.main = src/main 경로, runtimeClasspath = 런타임에 필요한 라이브러리 경로
	includeEmptyDirs = false 
	into('/app/api/classes/')
}

task cleanDeps(type: Delete) {
	delete '/app/api/classes/'
}

